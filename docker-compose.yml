version: "3.8"

services:

  domain:
    build:
      context: ./domainservice/
    container_name: domain
    depends_on:
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
      nats:
        condition: service_started
      kafka:
        condition: service_started
    environment:
      - MONGO_DB_NAME=${MONGO_DB}
      - MONGO_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_USERNAME=${MONGO_ROOT_USERNAME}
      - FINNHUB_API_TOKEN=${FINNHUB_API_TOKEN}
    env_file:
      - .env
    profiles: [ all ]

  gateway:
    build:
      context: ./gateway/
    container_name: gateway
    depends_on:
      domain:
        condition: service_started
    ports:
      - "9091:9091"
      - "8080:8080"
    profiles: [ all ]

  mongo:
    image: mongo:7.0.14
    container_name: mongo
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    profiles: [ all ]

  mongo-test:
    image: mongo:7.0.14
    container_name: mongo
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - "27017:27017"
    profiles: [ test ]

  kafka:
    image: confluentinc/confluent-local:7.4.1
    hostname: kafka
    container_name: kafka
    ports:
      - "8082:8082"
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
    profiles: [ all,test ]

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 9999:8080
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
    profiles: [ all ]

  nats:
    image: nats:2.7.0-alpine
    ports:
      - "4222:4222"
    healthcheck:
      test: [ "CMD", "nats", "ping" ]
      interval: 1s
      timeout: 1s
      retries: 5
    profiles: [ all, test ]

  redis:
    image: redis:7.4.1
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 1s
      timeout: 1s
      retries: 5
    profiles: [ all, test ]

volumes:
  mongo-data:
