[versions]
kotlin = "2.0.10"
spring-boot = "3.3.2"
dependency-management = "1.1.6"
detekt = "1.23.7"
springmockk = "4.0.2"
finnhub-kotlin-client = "2.0.20"
mongock = "5.2.4"
shedlock = "5.16.0"
ktlint = "1.23.6"
deltaCoverageVer = "2.4.0"
nats = "4.1.0.186.MASTER-SNAPSHOT"
reactor = "3.5.11"
protobufPlugin = "0.9.4"
protobuf = "3.24.3"
kafka = "3.0.3.170.MASTER-SNAPSHOT"
gRPC = "1.63.0"
gRPCReactor = "1.2.4"
grpcSpring = "3.1.0.RELEASE"
jacksonJs310 = "2.9.5"
archunit = "1.3.0"

[libraries]

#Plugins
kotlinJvm = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
springBoot = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot" }
dependencyManagement = { module = "io.spring.gradle:dependency-management-plugin", version.ref = "dependency-management" }
detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
deltaCoverage = { module = "io.github.surpsg:delta-coverage-gradle", version.ref = "deltaCoverageVer" }

#Libraries
# Reactor
reactorCore = { group = "io.projectreactor", name = "reactor-core", version.ref = "reactor" }
# Shedlock
shedlock-spring = { module = "net.javacrumbs.shedlock:shedlock-spring", version.ref = "shedlock" }
shedlock-provider-mongo = { module = "net.javacrumbs.shedlock:shedlock-provider-mongo", version.ref = "shedlock" }
# Third-party
finnhub-kotlin-client = { group = "io.finnhub", name = "kotlin-client", version.ref = "finnhub-kotlin-client" }
# Mongo
mongock-mongodb-springdata-v4-driver = { group = "io.mongock", name = "mongodb-springdata-v4-driver", version.ref = "mongock" }
mongock-springboot-v3 = { group = "io.mongock", name = "mongock-springboot-v3", version.ref = "mongock" }
# Tests
spring-mockk = { group = "com.ninja-squad", name = "springmockk", version.ref = "springmockk" }
pReactoTest = { group = "io.projectreactor", name = "reactor-test", version.ref = "reactor" }
# NATS
nats = { group = "systems.ajax", name = "nats-spring-boot-starter", version.ref = "nats" }
natsTest = { group = "systems.ajax", name = "nats-mock-lib", version.ref = "nats" }
# Kafka
kafka = { group = "systems.ajax", name = "kafka-spring-boot-starter", version.ref = "kafka" }
kafkaTest = { group = "systems.ajax", name = "kafka-mock", version.ref = "kafka" }
# Protobuf && gRPC
protoc = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }
gRPC = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "gRPC" }
gRPCReactor = { module = "com.salesforce.servicelibs:reactor-grpc", version.ref = "gRPCReactor" }
reactiveGrpcCommon = { group = "com.salesforce.servicelibs", name = "reactive-grpc-common", version.ref = "gRPCReactor" }
reactorGrpcStub = { group = "com.salesforce.servicelibs", name = "reactor-grpc-stub", version.ref = "gRPCReactor" }
protobuf = { group = "com.google.protobuf", name = "protobuf-java", version.ref = "protobuf" }
gRPCServerSpringStarter = { group = "net.devh", name = "grpc-server-spring-boot-starter", version.ref = "grpcSpring" }
gRPCSpringStarter = { group = "net.devh", name = "grpc-spring-boot-starter", version.ref = "grpcSpring" }
grpcCore = { group = "io.grpc", name = "grpc-core", version.ref = "gRPC" }
grpcProtobuf = { group = "io.grpc", name = "grpc-protobuf", version.ref = "gRPC" }
grpcNetty = { group = "io.grpc", name = "grpc-netty", version.ref = "gRPC" }
grpcStub = { group = "io.grpc", name = "grpc-stub", version.ref = "gRPC" }

detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "ktlint" }
kotlinSpring = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
jacksonJsr310 = { group = "com.fasterxml.jackson.datatype", name = "jackson-datatype-jsr310", version.ref = "jacksonJs310" }
archunit = { group = "com.tngtech.archunit", name = "archunit", version.ref = "archunit" }

[plugins]
protobufPlugin = { id = "com.google.protobuf", version.ref = "protobufPlugin" }
